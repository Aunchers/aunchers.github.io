---
// astro has this weird rule where functions and types must be imported seperatly
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content"
import BaseLayout from "../layouts/BaseLayout.astro";
import { Icon } from "astro-icon/components";
const posts: CollectionEntry<"posts">[] =
  await getCollection("posts");

posts.sort(
  (a, b) => b.data.date.getTime() - a.data.date.getTime()
);

---

<BaseLayout title="Blog">
  <!--<a href="/">
                        <Icon
                            name="mdi:arrow-left"
                            size="24"
                            class="absolute left-[-40px] top-1/2 -translate-y-1/2"
                        />
                    </a>-->
  <h1 class="text-[68px]">BLOG</h1>

  <p>this is my little space on the internet</p>
  <div class="flex items-center space-x-6">
    <div class="relative group inline-block">
      <a
        href="/site"
        class="underline decoration-gray-500 underline-offset-2 peer hover:text-gray-500 transition-colors duration-200"
      >
        home
        <span class="text-gray-500 cursor-pointer">(?)</span>
      </a>
      <div
        class="absolute left-0 mt-1 w-48 cursor-default p-2 text-sm text-white bg-gray-700 rounded shadow-lg opacity-0 peer-hover:opacity-100 transition-opacity duration-200 z-10"
      >
        return button.
      </div>
    </div>

    <div class="relative group inline-block">
      <a
        href="/site/rss.xml"
        class="underline decoration-gray-500 underline-offset-2 hover:text-gray-500 transition-colors duration-200 peer"
      >
        RSS
        <span class="text-gray-500 cursor-pointer">(?)</span>
      </a>
      <div
        class="absolute cursor-default left-0 mt-1 w-48 p-2 text-sm text-white bg-gray-700 rounded shadow-lg opacity-0 peer-hover:opacity-100 transition-opacity duration-200 z-10"
      >
        Really Simple Syndication - Add my blog, to your site.
      </div>
    </div>
  </div>
  <ul class="space-y-6 mt-5">
    {
      posts.map(({ id, data }) => (
        <li>
          <a
            href={`${data.slug}/`}
            class="text-2xl font-semibold hover:underline"
          >
            {data.title}
          </a>
          <p class="text-sm text-gray-500">{data.date.toLocaleDateString()}</p>
          {data.description && <p class="mt-1">{data.description}</p>}
        </li>
      ))
    }
  </ul>
</BaseLayout>
